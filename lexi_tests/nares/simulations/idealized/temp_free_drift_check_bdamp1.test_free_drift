# Material Properties 
variable bond_damp_type          equal 1          # [-] Use Yu Guo Damping
variable bond_damp_val           equal 1.0        # [-] don't use bond damping
variable rho_i                   equal 920.0      # [kg/m3] ice density
variable elastic_modulus         equal 1e8        # [Pa]
variable atom_elastic_modulus    equal 1e7
variable poissons_ratio          equal 0.3        # [-]
variable normal_strength         equal 10e3       # [Pa] bond critical normal strength
variable shear_strength          equal 80e3      # [Pa] bond critical shear strength 
variable coeff_rest_pp           equal 0.15       # [-] particle particle
variable coeff_rest_pw           equal 0.15        # [-] particle wall
variable mu                      equal 0.6        # [-] particle particle friction
variable wall_friction           equal 1.0        # [-] wall wall friction   
variable diameter                equal 2000

# Forcing Parameters
variable rho_o                   equal 1027       # [kg/m3] seawater density
variable rho_a                   equal 1          # [kg/m3] atmosphere density
variable drag_o                  equal 0.0055      # [-] ocean drag coefficient
variable drag_a                  equal 0.0015      # [-] atmos drag coefficient
variable max_wind_speed          equal 22         # [m/s]

# Derived Properties & Parameters
variable shear_modulus           equal ${elastic_modulus}/(2.0*(1.0+${poissons_ratio})) # assume isotropy
variable r_o                     equal 2/sqrt((PI*${diameter}))    
variable bond_skin               equal 1.01*${diameter}

# Numerics & output
variable dt                      equal 0.01                     
variable run_time                equal 6*3600                        # [s] runtime
variable num_timesteps           equal floor(${run_time}/${dt})
variable num_dumps               equal 100   
variable dump_freq               equal floor(${num_timesteps}/${num_dumps})
variable ts_check_freq           equal 6000
variable post_dir                string "post_free_drift_check"

### ----------------------------------- build simulation ----------------------------------- ###


# Preliminaries
units si                                                                # SI units
atom_style hybrid granular bond/gran n_bondtypes 1 bonds_per_atom 6     # specify particle and bond style
newton off                                                              # don't use Newton's 3rd law
dimension 2

processors 1 1 1                        # 1 processor per axis; if using multiple processors, use '*'
communicate single vel yes              # ghost particles are given position and velocity information
neighbor 1000 bin                        # skin distance to specify bin size for neighbor list generation
neigh_modify delay 0                    # don't delay the generation of neighbor lists                                                              

# Domain
boundary m m p                                                           # fixed boundary conditions in x y z
region domain block -10e3 110e3 -100.0e3 110.0e3 -2000 2000 units box              # (min X, max X, min Y, max Y, min Z, max Z)
create_box 2 domain                                                      # create box with domain above and 1 particle type

# Insertion region
region ins_reg block 0e3  100e3  0e3  100e3  -500  500 units box

# Region to freeze
region reg_frozenL1 block  0e3   10e3   0e3   100e3  -500  500 units box
region reg_frozenL2 block  10e3  20e3   0e3   10e3   -500  500 units box
region reg_frozenL3 block  10e3  18e3   10e3  20e3   -500  500 units box
region reg_frozenL4 block  10e3  16e3   20e3  30e3   -500  500 units box
region reg_frozenL5 block  10e3  14e3   30e3  40e3   -500  500 units box
region reg_frozenL6 block  10e3  12e3   40e3  50e3   -500  500 units box

region reg_frozenT  block  0e3   100e3  90e3  100e3  -500  500 units box

region reg_frozenR1 block  90e3  100e3  0e3   100e3  -500  500 units box
region reg_frozenR2 block  80e3  90e3   0e3   10e3   -500  500 units box
region reg_frozenR3 block  82e3  90e3   10e3  20e3   -500  500 units box
region reg_frozenR4 block  84e3  90e3   20e3  30e3   -500  500 units box
region reg_frozenR5 block  86e3  90e3   30e3  40e3   -500  500 units box
region reg_frozenR6 block  88e3  90e3   40e3  50e3   -500  500 units box


region reg_frozen union 13 reg_frozenL1 reg_frozenL2 reg_frozenL3 reg_frozenL4 reg_frozenL5 reg_frozenL6 &
                          reg_frozenR1 reg_frozenR2 reg_frozenR3 reg_frozenR4 reg_frozenR5 reg_frozenR6 reg_frozenT


# Contact style
pair_style gran model hertz tangential history                           # Hertz-Mindlin
pair_coeff * *                                                           # contact coeffs from material props not force field

# Bond style
bond_style gran                                                          # linear parallel bond

# contact
fix m1 all property/global youngsModulus peratomtype ${atom_elastic_modulus} ${atom_elastic_modulus} # set the elastic modulus
fix m2 all property/global poissonsRatio peratomtype ${poissons_ratio} ${poissons_ratio}  # set Poisson's ratio
fix m3 all property/global coefficientRestitution peratomtypepair 2 ${coeff_rest_pp} ${coeff_rest_pw} ${coeff_rest_pw} ${coeff_rest_pw} 
fix m4 all property/global coefficientFriction peratomtypepair 2 ${mu} ${wall_friction} ${wall_friction} ${wall_friction}     # set friction coefficient to atom type 1

# create atoms
lattice sq 2000
create_atoms 1 region ins_reg
set type 1 diameter 1999.9 density 920

# freeze atoms
group frozen_atoms region reg_frozen
set group frozen_atoms type 2  
set type 2 diameter 1999.9 density 920


bond_coeff 1 ${r_o} 0 ${elastic_modulus} ${shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 ${normal_strength} ${shear_strength}

timestep ${dt} 
run 0

# Install bonds
fix bond_int_int all bond/create/gran 1 1 1 ${bond_skin} 1 6        # nevery itype jtype bondskin btype newperts
fix bond_int_wall all bond/create/gran 1 1 2 ${bond_skin} 1 6        # nevery itype jtype bondskin btype newperts
fix bond_wall_wall all bond/create/gran 1 2 2 ${bond_skin} 1 6        # nevery itype jtype bondskin btype newperts

fix dtBond all check/timestep/bond 1 0.3                       # check the time step for the bond

run 1                                                          # bond grains

unfix dtBond                                                   # stop checking bond timestep (not doing anymore bonding)

fix_modify bond_int_int every 0                                      # do not create new bonds after this line
fix_modify bond_int_wall every 0                                      # do not create new bonds after this line
fix_modify bond_wall_wall every 0                                      # do not create new bonds after this line

# Set Integrator
group active type 1 
fix int active nve/sphere
fix 2d all enforce2d

# Forcing stuff 
variable current_step               equal step
variable current_time               equal v_current_step*${dt} 
variable wind_speed_increment       equal ${max_wind_speed}/${run_time}
variable dynamic_wind_speed         equal v_current_time*${wind_speed_increment}
# variable ocean_forcing_coeff_2d     atom ${rho_o}*${drag_o}*PI*r*(${rho_i}/${rho_o}+r)
# variable atmos_forcing_coeff_2d     atom ${rho_a}*${drag_a}*PI*r*((${rho_o}-${rho_i})/${rho_o}+r)
variable ocean_skin_coeff           atom ${rho_o}*${drag_o}*PI*r^2
variable atmos_skin_coeff           atom ${rho_a}*${drag_a}*PI*r^2
 
variable u_atmos_x               equal 0.0                                                        
variable u_atmos_y_dyn           atom v_dynamic_wind_speed*-1   # should increase from 0 to 22 over 24 hrs; just start 22 for now.
variable u_ocean_x               equal 0.0
variable u_ocean_y               equal 0.0

variable Fdrag_atmos_x           atom v_atmos_skin_coeff*sqrt(${u_atmos_x}^2+v_u_atmos_y_dyn^2)*${u_atmos_x}
variable Fdrag_atmos_y           atom v_atmos_skin_coeff*sqrt(${u_atmos_x}^2+v_u_atmos_y_dyn^2)*v_u_atmos_y_dyn
variable Fdrag_ocean_x           atom v_ocean_skin_coeff*sqrt((${u_ocean_x}-vx)^2+(${u_ocean_y}-vy)^2)*(${u_ocean_x}-vx)
variable Fdrag_ocean_y          atom v_ocean_skin_coeff*sqrt((${u_ocean_x}-vx)^2+(${u_ocean_y}-vy)^2)*(${u_ocean_y}-vy)

variable dragx                   atom v_Fdrag_atmos_x+v_Fdrag_ocean_x
variable dragy                   atom v_Fdrag_atmos_y+v_Fdrag_ocean_y
fix apply_increasing_winds active addforce v_dragx v_dragy 0 

# Compute bonds
compute bc all property/local batom1 batom2 bbondbroken 

#compute bc all property/local batom1 batom2 bbondbroken 

# Thermo setup
thermo 10000                                             # set output frequency for output for screen
thermo_style custom step numbonds atoms time dt cpu ke                 # custom pringting to screen
thermo_modify lost warn norm no                       # ignore lost atoms and do not normalize output

# Dump setup
dump dmp all custom ${dump_freq} ${post_dir}/dump*.liggghts id x y z radius vx vy vz fx fy fz type
dump_modify dmp pad 10 sort id first yes   

dump bondforcechain all local ${dump_freq} ${post_dir}/bfc*.bond c_bc[1] c_bc[2] c_bc[3] 
dump_modify bondforcechain pad 10 label 'BONDS' first yes

run ${num_timesteps}

unfix apply_increasing_winds

# shift to static winds
variable u_atmos_y               atom ${max_wind_speed}*-1   # should increase from 0 to 22 over 24 hrs; just start 22 for now.

variable Fdrag_atmos_x           atom v_atmos_skin_coeff*sqrt(${u_atmos_x}^2+v_u_atmos_y^2)*${u_atmos_x}
variable Fdrag_atmos_y           atom v_atmos_skin_coeff*sqrt(${u_atmos_x}^2+v_u_atmos_y^2)*v_u_atmos_y
variable Fdrag_ocean_x           atom v_ocean_skin_coeff*sqrt((${u_ocean_x}-vx)^2+(${u_ocean_y}-vy)^2)*(${u_ocean_x}-vx)
variable Fdrag_ocean_y           atom v_ocean_skin_coeff*sqrt((${u_ocean_x}-vx)^2+(${u_ocean_y}-vy)^2)*(${u_ocean_y}-vy)

variable dragx                   atom v_Fdrag_atmos_x+v_Fdrag_ocean_x
variable dragy                   atom v_Fdrag_atmos_y+v_Fdrag_ocean_y
fix apply_constant_winds active addforce v_dragx v_dragy 0 

run ${num_timesteps} 

# need to save some of these variables to a csv to make sure winds are correct...