# Material Properties 
variable bond_damp_type          equal 1          # [-] Use Yu Guo Damping
variable bond_damp_val           equal 0.0        # [-] don't use bond damping
variable rho_i                   equal 920.0      # [kg/m3] ice density
variable rho_o                   equal 1027
variable elastic_modulus         equal 1e8        # [Pa]
variable poissons_ratio          equal 0.3        # [-]
variable normal_strength_pp      equal 10e3       # [Pa] bond critical normal strength; material strength always less
variable shear_strength_pp       equal 50e3       # [Pa] bond critical shear strength 
variable normal_strength_pw      equal 10e6       # [Pa] bond critical normal strength; material strength always less
variable shear_strength_pw       equal 50e6       # [Pa] bond critical shear strength 
variable coeff_rest_pp           equal 0.15       # [-] particle particle
variable coeff_rest_pw           equal 0.15        # [-] particle wall
variable mu                      equal 0.6        # [-] particle particle friction
variable wall_friction           equal 0.1        # [-] wall wall friction   
variable bs_multiplier           equal 0.001      # [-] bond skin multiplier 
variable mean_diameter           equal 2090
variable max_diameter            equal 2200

# Derived Properties & Parameters
variable bond_skin               equal (1+${bs_multiplier})*${max_diameter}    # [m] 0.1% of the max diameter; will subtract this quantity first when doing the packing fix
variable shear_modulus           equal ${elastic_modulus}/(2.0*(1.0+${poissons_ratio})) # assume isotropy
variable r_o                     equal 2/sqrt((PI*${mean_diameter}))    
variable rho_i_2d                atom ${rho_i}*3/(4*r)*100

variable forcing_coeff           atom ${rho_o}*1000*PI*(r^2)*${rho_i}/${rho_o} 
variable fdragx                  atom 200000*v_forcing_coeff*sqrt((vx)^2+(vy)^2+(vz)^2)*(-1*vx)
variable fdragy                  atom 200000*v_forcing_coeff*sqrt((vx)^2+(vy)^2+(vz)^2)*(-1*vy)
variable fdragz                  atom v_forcing_coeff*sqrt((vx)^2+(vy)^2+(vz)^2)*(-1*vz)

# Numerics & output
variable run_time                equal 1*3600                        # [s] runtime
variable num_timesteps           equal 100000#floor(${run_time}/${dt})
variable num_dumps               equal 50   
variable dump_freq               equal floor(${num_timesteps}/${num_dumps})
variable dt                      equal 0.01              

### ----------------------------------- build simulation ----------------------------------- ###

# Preliminaries
units si                                                              
atom_style hybrid granular bond/gran n_bondtypes 2 bonds_per_atom 6    
atom_modify map array sort 0 0                                            
newton off                                                              
hard_particles yes
processors * * *                        

# Domain
read_data data/2kmfloes_mono_fixed_3d.data 

# Neighbors
communicate single vel yes              # ghost particles are given position and velocity information
neighbor 750 bin                        # skin distance to specify bin size for neighbor list generation
neigh_modify delay 0                    # don't delay the generation of neighbor lists   

# Bond style
bond_style gran                                        # linear parallel bond

# Contact style
pair_style gran model hertz tangential history                           # Hertz-Mindlin
pair_coeff * *                                                           # contact coeffs from material props not force field

# Contact law
fix m1 all property/global youngsModulus peratomtype ${elastic_modulus} ${elastic_modulus} # set the elastic modulus
fix m2 all property/global poissonsRatio peratomtype ${poissons_ratio} ${poissons_ratio}  # set Poisson's ratio
fix m3 all property/global coefficientRestitution peratomtypepair 2 ${coeff_rest_pp} ${coeff_rest_pw} ${coeff_rest_pw} ${coeff_rest_pw} 
fix m4 all property/global coefficientFriction peratomtypepair 2 ${mu} ${wall_friction} ${wall_friction} ${wall_friction}     # set friction coefficient to atom type 1

# Set bond coefficients for a simple bond (no holes) with properties below; see Notion for more details 
bond_coeff 1 ${r_o} 0 ${elastic_modulus} ${shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 ${normal_strength_pp} ${shear_strength_pp}
bond_coeff 2 ${r_o} 0 ${elastic_modulus} ${shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 ${normal_strength_pw} ${shear_strength_pw}

# Delete extra atoms
group all_atoms type 1 2
variable n_atoms equal count(all_atoms)-14
delete_bonds all atom 1 remove
group atoms_2_delete id > ${n_atoms}
delete_atoms group atoms_2_delete

# Reduce diameters by 10% !!!
# variable new_diam atom 2*r-200 # take off 10% # for very small particles, took off 20%...
# set group all_atoms diameter v_new_diam

# Timestep & insertion
timestep ${dt}
run 0

group walls type 2
group active type 1

# Therm config
thermo 10000                                             # set output frequency for output for screen
thermo_style custom step numbonds atoms time dt cpu ke                 # custom pringting to screen
thermo_modify lost warn norm no                       # ignore lost atoms and do not normalize output

# Dump setup
dump dmp all custom ${dump_freq} post_buoy/dump*.liggghts id x y z radius vx vy vz fx fy fz type
dump_modify dmp pad 10 sort id first yes 

# adjust to hydrostatic equilibrium
fix int active nve/sphere
fix grav all gravity 9.81 vector 0 0 -1
fix buoy all buoyancy dim z level 1000 density ${rho_o} 
fix zdrag all addforce v_fdragx v_fdragy v_fdragz

run 100000
# unfix int

# ### ----------------------------------- bond grains ---------------------------------- ###

# fix bond_int_int all bond/create/gran 1 1 1 ${bond_skin} 1 6        # nevery itype jtype bondskin btype newperts
# fix bond_int_wall all bond/create/gran 1 1 2 ${bond_skin} 2 6        # nevery itype jtype bondskin btype newperts
# fix bond_wall_wall all bond/create/gran 1 2 2 ${bond_skin} 2 6        # nevery itype jtype bondskin btype newperts

# fix dtBond all check/timestep/bond 1 0.3                       # check the time step for the bond

# run 1                                                          # bond grains

# unfix dtBond                                                   # stop checking bond timestep (not doing anymore bonding)

# fix_modify bond_int_int every 0                                      # do not create new bonds after this line
# fix_modify bond_int_wall every 0                                      # do not create new bonds after this line
# fix_modify bond_wall_wall every 0                                      # do not create new bonds after this line

# ### ----------------------------------- run & output ---------------------------------- ###

# run 10000

# write_restart restarts/2kmfloes3d.restart