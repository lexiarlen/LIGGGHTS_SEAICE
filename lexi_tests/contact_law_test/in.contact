# 3D Contact Law Test
# For testing with and without bonds
# By Lexi Arlen September 2024

# Particles initially have 10m overlap ~ 5
# Overlap has only an x component 


### ----------------------------------- variable declaration ----------------------------------- ###

# Material Properties
variable particle_diameter       equal 100.0      # [m] particles diameter 
variable bond_damp_type          equal 1          # [-] Use Yu Guo Damping
variable bond_damp_val           equal 0.0        # [-] from cantilever beam; shear uses 0.05; make higher..?
variable particle_density        equal 910.0      # [kg/m3] 3D density
variable elastic_modulus         equal 1.0e8      # [Pa]
variable poissons_ratio          equal 0.3        # [-]
variable normal_strength         equal 1.0e5      # [Pa] bond critical normal strength
variable shear_strength          equal 1.0e6      # [Pa] bond critical shear strength

# Simulation Parameters
variable percent_overlap         equal 0.05    # percent of particle diameter that is overlapping
variable simulation_time         equal 5      # [s]
variable fileprint_time          equal 0.01    # [s] how often we print to the file

# Derived Material Properties
variable particle_radius         equal 0.5*${particle_diameter}
variable 2d_equiv_density        equal ${particle_density}*3.0/(4.0*${particle_radius})
variable shear_modulus           equal ${elastic_modulus}/(2.0*(1.0+${poissons_ratio})) # assume isotropy
variable bond_skin               equal 1.001*${particle_diameter} # can't be too large

# Calculate dt using the bond model
variable r2                      equal ${particle_radius}*${particle_radius}
variable r3                      equal ${r2}*${particle_radius}
variable K                       equal ${elastic_modulus}*PI*${r2}/${particle_diameter}
variable m                       equal 4.0*PI*${r3}*${particle_density}/3.0 # this is the particle mass; change for 2D simulations
variable w                       equal sqrt($K/$m)
variable dt                      equal 0.95/((1.0+2.9392*${bond_damp_val})*$w)/1000 # no clue where this comes from - Yu Guo?
variable dt_nobond               equal 0.001

# Simulation Derived Parameters
variable left_particle_xpos      equal 350+${particle_diameter}
variable right_particle_xpos     equal ${left_particle_xpos}+${particle_diameter}*(1-${percent_overlap})
variable fileprint_step          equal ceil(${fileprint_time}/${dt})
variable simulation_num_steps    equal ceil(${simulation_time}/${dt})

### ----------------------------------- build simulation ----------------------------------- ###

# Preliminaries
units si                                                                # SI units
atom_style hybrid granular bond/gran n_bondtypes 1 bonds_per_atom 6    # specify particle and bond style BOND
#atom_style granular                                                     # specify particle style NO BOND
hard_particles yes                                                      # need for high elastic modulus (> 1e5)
newton off                                                              # don't use Newton's 3rd law

processors 1 1 1                        # 1 processor per axis; if using multiple processors, use '*'
communicate single vel yes              # ghost particles are given position and velocity information
neighbor 1.0 bin                        # skin distance to specify bin size for neighbor list generation
neigh_modify delay 0                    # don't delay the generation of neighbor lists                                                              

# Domain
boundary f f f                                                           # fixed boundary conditions in x y z
region domain block 0.0 1000.0 0.0 200.0 0.0 200.0 units box              # (min X, max X, min Y, max Y, min Z, max Z)
create_box 1 domain                                                      # create box with domain above and 1 particle type

# Contact style
pair_style gran model hertz tangential history                           # Hertz-Mindlin
pair_coeff * *                                                           # contact coeffs from material props not force field

# Bond style
bond_style gran                                                          # linear parallel bond BOND
 
# Specify and create atoms
fix m1 all property/global youngsModulus peratomtype ${elastic_modulus}  # set the elastic modulus
fix m2 all property/global poissonsRatio peratomtype ${poissons_ratio}   # set Poisson's ratio
fix m3 all property/global coefficientRestitution peratomtypepair 1 0.5  # set restituion coefficient to atom type 1
fix m4 all property/global coefficientFriction peratomtypepair 1 0.7     # set friction coefficient to atom type 1

create_atoms 1 single ${left_particle_xpos} 100.0 100.0 units box        # create one atom of type 1 at x y z; id 1 assigned
create_atoms 1 single ${right_particle_xpos} 100.0 100.0 units box       # create one atom of type 1 at x y z; id 2 assigned

set atom 1 diameter ${particle_diameter} density ${2d_equiv_density}     # assign atom 1 initial values
set atom 2 diameter ${particle_diameter} density ${2d_equiv_density}     # assign atom 2 initial values

# Set bond coefficients for a simple bond (no holes) with properties below; see Notion for more details 
bond_coeff 1 1 0 ${elastic_modulus} ${shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 ${normal_strength} ${shear_strength} 

#timestep ${dt_nobond} 
timestep ${dt} 

run 0                                                                    # insert particles

### ----------------------------------- bond grains ---------------------------------- ###
 
# compute bc all property/local batom1x batom1y batom1z batom2x batom2y batom2z batom1 batom2 btype bforceX bforceY bforceZ btorqueX btorqueY btorqueZ beqdist

# fix bondcr all bond/create/gran 1 1 1 ${bond_skin} 1 6         # nevery itype jtype cutoff?? bondskin btype newperts

# fix dtBond all check/timestep/bond 1 0.1                       # check the time step for the bond

# run 1                                                          # bond grains

# unfix dtBond                                                   # stop checking bond timestep (not doing anymore bonding)

# fix_modify bondcr every 0                                      # do not create new bonds after this line

### ----------------------------------- run & output simulation ---------------------------------- ###

fix integrate all nve/sphere                            # set the integrator such that moles, velocity, and energy are conserved 

shell mkdir post                                        # make directory to output data

dump dmp all custom ${fileprint_step} post/dump*.liggghts id mass x y z vx vy vz fx fy fz omegax omegay omegaz radius 
dump_modify dmp pad 8                                  # pad the timesteps with zeros

# dump bondforcechain all local ${fileprint_step} post/bfc*.bond &
#      c_bc[1] c_bc[2] c_bc[3] c_bc[4] c_bc[5] c_bc[6] c_bc[7] c_bc[8] c_bc[9] c_bc[10] c_bc[11] c_bc[12] c_bc[13] c_bc[14] c_bc[15] c_bc[16]

# dump_modify bondforcechain pad 8                       # pad the timesteps with zeros

thermo 100                                              # set output frequency for output for screen
thermo_style custom step atoms numbonds dt                       # custom pringting to screen
thermo_modify lost ignore norm no                       # ignore lost atoms and do not normalize output

run 5000                                                 # run
