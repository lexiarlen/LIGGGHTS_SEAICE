### ----------------------------------- variable declaration ----------------------------------- ###

# Material Properties
variable diameter                equal 0.5        # [m] particles diameter 
variable bond_damp_type          equal 1          # [-] Use Yu Guo Damping
variable bond_damp_val           equal 0.0        # [-] from cantilever beam; shear uses 0.05; make higher..?
variable ice_density             equal 910.0      # [kg/m3] 3D density
variable elastic_modulus         equal 1.0e7      # [Pa]
variable poissons_ratio          equal 0.3        # [-]
variable normal_strength         equal 1.0e2      # [Pa] bond critical normal strength
variable shear_strength          equal 1.0e3      # [Pa] bond critical shear strength
variable polydispersity          equal 0.02       # [-] percent polydispersity to apply
variable coeff_rest              equal 0.5

# Derived Material Properties
variable radius                  equal 0.5*${diameter}
variable radius_squared          equal ${radius}*${radius}
variable shear_modulus           equal ${elastic_modulus}/(2.0*(1.0+${poissons_ratio})) # assume isotropy
variable bond_skin               equal 1.05*${diameter} 

# Forcing Parameters
variable coeff_drag_ocean        equal 0.006      # [-] drag coeff between ice & ocean
variable coeff_drag_atmos        equal 0.001      # [-] drag coeff between ice & atmosphere
variable seawater_density        equal 1020       # [kg/m3] density of seawater
variable atmos_density           equal 1          # [kg/m3] density of air

variable max_wind_speed          atom "25"       # [m/s] maximum wind speed
variable w                       atom "7.0"       # [m] eye of the storm width
variable a                       atom "90"
variable mx                      atom "0.0"       # [m] cyclone x coordinate
variable my                      atom "0.0"       # [m] cyclone y coordinate

variable r                       atom "sqrt((v_mx-x)^2+(v_my-y)^2)"
variable f                       atom "(1/v_w)*exp(1-v_r/v_w)"

# Forcing
variable ocean_forcing_coeff     equal ${seawater_density}*${coeff_drag_ocean}*PI*${radius_squared}*${ice_density}/${seawater_density}
variable atmos_forcing_coeff     equal ${atmos_density}*${coeff_drag_atmos}*PI*${radius_squared}*(${seawater_density}-${ice_density})/${seawater_density}

variable u_atmos_x               atom "v_max_wind_speed*-1*v_f*(cos(v_a)*(x-v_mx)+sin(v_a)*(y-v_my))"                                                        
variable u_atmos_y               atom "v_max_wind_speed*-1*v_f*(cos(v_a)*(y-v_my)-sin(v_a)*(x-v_mx))"   
variable u_ocean_x               atom "0.0"
variable u_ocean_y               atom "0.0"

variable Fdrag_atmos_x           atom ${atmos_forcing_coeff}*sqrt(v_u_atmos_x^2+v_u_atmos_y^2)*v_u_atmos_x
variable Fdrag_atmos_y           atom ${atmos_forcing_coeff}*sqrt(v_u_atmos_x^2+v_u_atmos_y^2)*v_u_atmos_y
variable Fdrag_atmos_z           atom "0.0"
variable Fdrag_ocean_x           atom ${ocean_forcing_coeff}*sqrt((v_u_ocean_x-vx)^2+(v_u_ocean_y-vy)^2)*(v_u_ocean_x-vx)
variable Fdrag_ocean_y           atom ${ocean_forcing_coeff}*sqrt((v_u_ocean_x-vx)^2+(v_u_ocean_y-vy)^2)*(v_u_ocean_y-vy)
variable Fdrag_ocean_z           atom "0.0"

# Simulation Parameters
variable lattice_spacing         equal ${diameter}*(1+${polydispersity})

# Numerics & output
variable dt                      equal 8e-4
variable dump_freq               equal 4000

### ----------------------------------- build simulation ----------------------------------- ###

# Preliminaries
units si                                                                # SI units
atom_style hybrid granular bond/gran n_bondtypes 1 bonds_per_atom 6     # specify particle and bond style
atom_modify map array sort 0 0                                              
newton off                                                              # don't use Newton's 3rd law
processors * * *                        # 1 processor per axis; if using multiple processors, use '*'

# Domain
boundary p p p                                                           # periodic boundary conditions in x y z
region domain block -25.5 25.5 -25.5 25.5 -1.0 1.0 units box         # (min X, max X, min Y, max Y, min Z, max Z)
create_box 1 domain                                                      # create box with domain above and 1 particle type
region insertion_region block -25.0 25.0 -25.0 25.0 -0.26 0.26 units box     # (min X, max X, min Y, max Y, min Z, max Z)


communicate single vel yes              # ghost particles are given position and velocity information
neighbor 0.1 bin                        # skin distance to specify bin size for neighbor list generation
neigh_modify delay 0                    # don't delay the generation of neighbor lists   

# Bond style
bond_style gran                                                          # linear parallel bond

# Contact style
pair_style gran model hertz tangential history                           # Hertz-Mindlin
pair_coeff * *                                                           # contact coeffs from material props not force field

# Contact law
fix m1 all property/global youngsModulus peratomtype ${elastic_modulus}  # set the elastic modulus
fix m2 all property/global poissonsRatio peratomtype ${poissons_ratio}   # set Poisson's ratio
fix m3 all property/global coefficientRestitution peratomtypepair 1 ${coeff_rest}  # set restituion coefficient to atom type 1
fix m4 all property/global coefficientFriction peratomtypepair 1 0.7     # set friction coefficient to atom type 1

# Add walls
fix xwalls1 all wall/gran model hertz tangential history primitive type 1 xplane -25.3 
fix xwalls2 all wall/gran model hertz tangential history primitive type 1 xplane 25.3 
fix ywalls1 all wall/gran model hertz tangential history primitive type 1 yplane -25.3 
fix ywalls2 all wall/gran model hertz tangential history primitive type 1 yplane 25.3 
fix zwalls1 all wall/gran model hertz tangential history primitive type 1 zplane 0.5
fix zwalls2 all wall/gran model hertz tangential history primitive type 1 zplane 0.5


# Set bond coefficients for a simple bond (no holes) with properties below; see Notion for more details 
bond_coeff 1 1 0 ${elastic_modulus} ${shear_modulus} ${bond_damp_type} ${bond_damp_val} 1 ${normal_strength} ${shear_strength}

lattice sc ${lattice_spacing}
create_atoms 1 region insertion_region units lattice                     # atom type, region for attoms to be created, 
set type 1 diameter ${diameter} density ${ice_density}     # assign all atoms w/ initial values

# Timestep & insertion
timestep ${dt}                                                         # timestep
run 0

### ----------------------------------- bond grains ---------------------------------- ###
 
compute bc all property/local batom1 batom2 bbondbroken bforceX bforceY bforceZ 

fix bondcr all bond/create/gran 1 1 1 ${bond_skin} 1 6         # nevery itype jtype bondskin btype newperts

fix dtBond all check/timestep/bond 1 0.1                       # check the time step for the bond

run 1                                                          # bond grains

unfix dtBond                                                   # stop checking bond timestep (not doing anymore bonding)

fix_modify bondcr every 0                                      # do not create new bonds after this line

### ----------------------------------- configure output ---------------------------------- ###

fix integrate all nve/sphere                            # set the integrator such that moles, velocity, and energy are conserved 
compute stress all stress/atom pair

### ----------------------------------- apply forces & run ---------------------------------- ###

fix ocean_drag all addforce v_Fdrag_ocean_x v_Fdrag_ocean_y v_Fdrag_ocean_z
fix atmos_drag all addforce v_Fdrag_atmos_x v_Fdrag_atmos_y v_Fdrag_atmos_z

dump dmp all custom ${dump_freq} post/dump*.liggghts id mass x y z vx vy vz fx fy fz radius c_stress[1] c_stress[2] c_stress[3] c_stress[4] c_stress[5] c_stress[6]
dump_modify dmp pad 10 sort id first yes                             # pad the timesteps with zeros

thermo 5000                                             # set output frequency for output for screen
thermo_style custom step numbonds atoms time dt                  # custom pringting to screen
thermo_modify lost warn norm no                       # ignore lost atoms and do not normalize output

dump bondforcechain all local ${dump_freq} post/bfc*.bond &
    c_bc[1] c_bc[2] c_bc[3] c_bc[4] c_bc[5] c_bc[6]
dump_modify bondforcechain pad 10 label 'BONDS' first yes

run 800000